language: php

env:
  global:
    - COMPOSER_ARGS="--no-interaction"

matrix:
  fast_finish: true
  include:
  - php: 7.1
    env:
    - DEPENDENCIES=""
    - USE_VPACK=true
    - ARANGODB_VERSION=3.6.4
  - php: 7.1
    env:
    - DEPENDENCIES=""
    - USE_VPACK=false
    - ARANGODB_VERSION=3.6.4
  - php: 7.2
    env:
    - DEPENDENCIES=""
    - USE_VPACK=true
    - EXECUTE_CS_CHECK=true
    - ARANGODB_VERSION=3.6.4
  - php: 7.2
    env:
    - DEPENDENCIES=""
    - USE_VPACK=false
    - TEST_COVERAGE=true
    - ARANGODB_VERSION=3.6.4
  - php: 7.3
    env:
    - DEPENDENCIES=""
    - USE_VPACK=true
    - ARANGODB_VERSION=3.6.4
  - php: 7.3
    env:
    - DEPENDENCIES=""
    - USE_VPACK=false
    - ARANGODB_VERSION=3.6.4
  - php: 7.4
    env:
    - DEPENDENCIES=""
    - USE_VPACK=true
    - PHPSTAN_CHECK=true
    - ARANGODB_VERSION=3.6.4
  - php: 7.4
    env:
    - DEPENDENCIES=""
    - USE_VPACK=false
    - ARANGODB_VERSION=3.6.4
  - php: nightly
    env:
    - DEPENDENCIES=""
    - USE_VPACK=true
    - ARANGODB_VERSION=3.6.4
  - php: nightly
    env:
    - DEPENDENCIES=""
    - USE_VPACK=false
    - ARANGODB_VERSION=3.6.4

  allow_failures:
  - php: nightly

addons:
  hosts:
  - arangodb

cache:
  directories:
  - $HOME/.composer/cache
  - $HOME/.php-cs-fixer
  - $HOME/.local

before_script:
  - mkdir -p "$HOME/.php-cs-fixer"
  - composer self-update
  - composer update --prefer-dist $DEPENDENCIES
  - if [[ $USE_VPACK == 'true' || $TEST_COVERAGE == 'true' ]]; then sudo apt-get update; fi
  - if [[ $USE_VPACK == 'true' || $TEST_COVERAGE == 'true' ]]; then sudo apt-get install -y git build-essential autoconf automake libtool bison re2c cmake; fi
  - if [[ $USE_VPACK == 'true' || $TEST_COVERAGE == 'true' ]]; then ./test/travis/compile_vpack.sh; fi
  - if [[ $USE_VPACK == 'true' || $TEST_COVERAGE == 'true' ]]; then echo 'extension=velocypack.so' >> ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/velocypack.ini; fi
  - ./test/travis/setup_arangodb.sh

script:
  - if [[ $PHPSTAN_CHECK == 'true' ]]; then ./vendor/bin/phpstan analyze -l max -c ./phpstan.installer.neon ./src; fi
  - if [[ $EXECUTE_CS_CHECK == 'true' ]]; then ./vendor/bin/phpcs; fi
  - if [[ $EXECUTE_CS_CHECK == 'true' ]]; then ./vendor/bin/docheader check src/ tests/; fi
  - if [[ $TEST_COVERAGE == 'true' ]]; then php -dzend_extension=xdebug.so ./vendor/bin/phpunit --coverage-text --coverage-clover ./build/logs/clover.xml; fi
  - if [[ $USE_VPACK == 'true' ]]; then php ./vendor/bin/phpunit; fi
  - if [[ $USE_VPACK == 'false' ]]; then php ./vendor/bin/phpunit --exclude-group vpack; fi

after_script:
  - if [[ $TEST_COVERAGE == 'true' ]]; then travis_retry php vendor/bin/php-coveralls -v ; fi
  - if [[ $TEST_COVERAGE == 'true' ]]; then wget https://scrutinizer-ci.com/ocular.phar ; fi
  - if [[ $TEST_COVERAGE == 'true' ]]; then php ocular.phar code-coverage:upload --format=php-clover build/logs/clover.xml ; fi
